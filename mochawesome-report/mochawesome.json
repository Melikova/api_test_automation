{
  "stats": {
    "suites": 5,
    "tests": 5,
    "passes": 4,
    "pending": 1,
    "failures": 0,
    "start": "2023-06-06T08:36:25.137Z",
    "end": "2023-06-06T08:36:26.397Z",
    "duration": 1260,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "db43452b-269c-470d-985e-355147145ccf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0391f9b7-3138-4762-8eb9-ef8bd7adcbfa",
          "title": "DELETE API Request Tests",
          "fullFile": "C:\\Users\\User\\Desktop\\test_2\\api-test\\delete_request.js",
          "file": "\\api-test\\delete_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to delete user",
              "fullTitle": "DELETE API Request Tests should be able to delete user",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "21e34f6c-28fb-4a51-8be1-54a40bd06bec",
              "parentUUID": "0391f9b7-3138-4762-8eb9-ef8bd7adcbfa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "21e34f6c-28fb-4a51-8be1-54a40bd06bec"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6077667f-980b-44d6-9411-a1085f44d53d",
          "title": "GET API Request Tests",
          "fullFile": "C:\\Users\\User\\Desktop\\test_2\\api-test\\get_request.js",
          "file": "\\api-test\\get_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to get user list",
              "fullTitle": "GET API Request Tests should be able to get user list",
              "timedOut": false,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get('https://reqres.in/api/users?page=2');\nexpect(res.data.page).equal(2);\nexpect(res.data.per_page).equal(6);",
              "err": {},
              "uuid": "9ff53846-2f65-44bd-897b-389b1a8c17a9",
              "parentUUID": "6077667f-980b-44d6-9411-a1085f44d53d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ff53846-2f65-44bd-897b-389b1a8c17a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a45c7292-c72b-456b-92e6-49aff3b51bfb",
          "title": "PATCH API Request Tests",
          "fullFile": "C:\\Users\\User\\Desktop\\test_2\\api-test\\patch_request.js",
          "file": "\\api-test\\patch_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to update user details",
              "fullTitle": "PATCH API Request Tests should be able to update user details",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomeName = faker.person.firstName();\nconst res = await axios.patch('https://reqres.in/api/users/2', {\"first_name\": randomeName});\nconsole.log(res.data);\nexpect(res.data.first_name).equal(randomeName);",
              "err": {},
              "uuid": "229155f2-c9bf-412f-83b4-f4b76ffd1018",
              "parentUUID": "a45c7292-c72b-456b-92e6-49aff3b51bfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "229155f2-c9bf-412f-83b4-f4b76ffd1018"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 289,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7442f88b-c3fb-4984-b27f-a3294efcf7c3",
          "title": "POST API Request Tests",
          "fullFile": "C:\\Users\\User\\Desktop\\test_2\\api-test\\post_request.js",
          "file": "\\api-test\\post_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to post user details",
              "fullTitle": "POST API Request Tests should be able to post user details",
              "timedOut": false,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomeName = faker.person.fullName();\nconst randomeJobTitle = faker.person.jobTitle();\nconst res = await axios.post('https://reqres.in/api/users', {\"name\": randomeName, \"job\": randomeJobTitle});\nconsole.log(res.data);\nexpect(res.data.name).equal(randomeName);\nexpect(res.data.job).equal(randomeJobTitle);",
              "err": {},
              "uuid": "2ac034a1-20f3-4c80-8266-23ee883f7593",
              "parentUUID": "7442f88b-c3fb-4984-b27f-a3294efcf7c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ac034a1-20f3-4c80-8266-23ee883f7593"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 243,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8c21f0c3-9cda-4006-8f8f-d39e92519ec2",
          "title": "PUT API Request Tests",
          "fullFile": "C:\\Users\\User\\Desktop\\test_2\\api-test\\put_request.js",
          "file": "\\api-test\\put_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to update user details",
              "fullTitle": "PUT API Request Tests should be able to update user details",
              "timedOut": false,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomeName = faker.person.firstName();\nconst randomeJobTitle = faker.person.jobTitle();\nconst res = await axios.put('https://reqres.in/api/users/2', {\"first_name\": randomeName, \"job\": randomeJobTitle});\nconsole.log(res.data);\nexpect(res.data.first_name).equal(randomeName);\nexpect(res.data.job).equal(randomeJobTitle);",
              "err": {},
              "uuid": "e5654812-b9fd-4191-ad8e-26511a9a3aa0",
              "parentUUID": "8c21f0c3-9cda-4006-8f8f-d39e92519ec2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5654812-b9fd-4191-ad8e-26511a9a3aa0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 367,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}